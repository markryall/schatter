== schatter

A simple persisted chat service.  See the schatter gem for wrapping calls to this service.

== Getting started

Deploy the application somewhere (heroku for instance).

Log in with a persona account.

Use the generated auth_token for everything else.

= API

My lame understand of REST suggests that building urls from known templates is bad.  Instead you hit a resource url and the hypermedia links to determine what can be done next.

    curl -i -H "Accept: application/json" http://localhost:3000

Creating a conversation:

    curl -H 'Content-Type: application/json' -H "Accept: application/json" -X POST -d '{}' 'http://localhost:3000/conversations?auth_token=96b97445-9694-4506-aa14-82ec76c50629'

    {"uuid":"c639211d-7a20-419e-8ff0-129e77ef1f49","timestamp":1364544668}

Adding a message to a conversation:

    curl -H 'Content-Type: application/json' -H "Accept: application/json" -X POST -d '{"content": "hello world"}' http://localhost:3000/conversations/c639211d-7a20-419e-8ff0-129e77ef1f49/messages?auth_token=96b97445-9694-4506-aa14-82ec76c50629

    {"uuid":"c2d9a906-25de-4981-afe4-cd3b6c0e099c","timestamp":1364544814}

== Future plans

* actually being able to communicate via the web interface
* switching between sequential and threaded conversation views